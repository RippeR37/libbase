Tracing
=======

About
-----

``libbase`` library comes with an implementation of Tracing Events from Chromium
[#chr_tracing]_ which can be placed inside your code to generate tracing report
which in turn can be viewed with:

* `Perfetto UI <https://ui.perfetto.dev/>`_
* `(Legacy) Catapult Trace Viewer <https://ui.perfetto.dev/v25.0-35871d62c/assets/catapult_trace_viewer.html>`_

  .. note::
     The above link is to the currently available
     :abbr:`CTV (Catapult Trace Viewer)`. If this changes, you can still access
     it through Perfetto UI by clicking :guilabel:`Open with legacy UI`.

All tracing-related APIs are exposed through macros which names start with
``TRACE_``. This allows you to disable tracing completely (e.g. in final-release
builds).

When used (and enabled), they will collect tracing data during runtime which you
can dump to any ``std::ostream`` stream (file, console, etc.) or directly to a
file. This will dump all tracind data in JSON format as specified in the
`Trace Event Format \
<https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/preview>`_.

.. caution::

   Currently, ``libbase`` has only a basic implementation which might not be
   suitable for use in production code (or at least shippable in release
   builds). Some configuration options (e.g. runtime filtering by category
   names) are not yet implemented and both performance and memory-usage overhead
   of current implementation might be noticably bigger than from the original
   Chromium's tracing system implementation. For now, we recommend enabling them
   only when needed (e.g. for debugging sessions).

.. seealso::

   See :doc:`../getting_started/configuration` page for details on available
   configuration options.


Tracing APIs
------------

.. doxygendefine:: TRACE_EVENT

.. doxygendefine:: TRACE_EVENT_BEGIN
.. doxygendefine:: TRACE_EVENT_END

.. doxygendefine:: TRACE_EVENT_ASYNC_BEGIN
.. doxygendefine:: TRACE_EVENT_ASYNC_END
.. doxygendefine:: TRACE_EVENT_ASYNC_STEP

.. doxygendefine:: TRACE_EVENT_WITH_FLOW_BEGIN
.. doxygendefine:: TRACE_EVENT_WITH_FLOW_END
.. doxygendefine:: TRACE_EVENT_WITH_FLOW_STEP

.. doxygendefine:: TRACE_COUNTER
.. doxygendefine:: TRACE_COUNTER_ID

.. doxygendefine:: TRACE_SIGNAL
.. doxygendefine:: TRACE_SIGNAL_PROCESS
.. doxygendefine:: TRACE_SIGNAL_THREAD

.. doxygendefine:: TRACE_NAME_PROCESS
.. doxygendefine:: TRACE_NAME_THREAD

.. doxygendefine:: TRACE_EVENT_FLUSH_TO_FILE
.. doxygendefine:: TRACE_EVENT_FLUSH_TO_STREAM


Example
-------

This is an example of tracing generated by the :doc:`../examples/simple` and
rendered by the *Perfetto UI*:

.. image:: tracing_example.png
   :align: center
   :width: 75%


.. Footnotes:

.. [#chr_tracing] https://chromium.googlesource.com/chromium/src/base/trace_event/common/+/refs/heads/main/trace_event_common.h
