<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="bind__internals_8h" kind="file" language="C++">
    <compoundname>bind_internals.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">functional</includes>
    <includes local="no">tuple</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes refid="callback__forward_8h" local="yes">base/callback_forward.h</includes>
    <includes refid="callback__iface_8h" local="yes">base/callback_iface.h</includes>
    <includes refid="weak__ptr_8h" local="yes">base/memory/weak_ptr.h</includes>
    <includes refid="type__traits_8h" local="yes">base/type_traits.h</includes>
    <includedby refid="bind_8h" local="yes">base/bind.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>base/bind_internals.h</label>
        <link refid="bind__internals_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="4">
        <label>tuple</label>
      </node>
      <node id="5">
        <label>type_traits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacebase">base</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="bind__internals_8h_1a171f2cd1b1b2b7f34c79e87666f560ff" prot="public" static="no">
        <name>LIBBASE_IMPL_MEMBER_FUNCTION_TRAIT</name>
        <param><defname>INSTANCE_TYPE</defname></param>
        <param><defname>...</defname></param>
        <initializer>  template &lt;typename ReturnType, typename ClassType,                         \
            typename... ArgumentTypes&gt;                                       \
  struct FunctorTraits&lt;ReturnType (ClassType::*)(ArgumentTypes...)           \
                           __VA_ARGS__&gt;                                      \
      : FunctorTraitsImpl&lt;ReturnType,                                        \
                          std::tuple&lt;INSTANCE_TYPE*, ArgumentTypes...&gt;,      \
                          1 + sizeof...(ArgumentTypes)&gt; {                    \
    template &lt;typename Functor,                                              \
              std::size_t... Indexes,                                        \
              typename BoundArgumentsTupleType,                              \
              typename... RunArgumentTypes&gt;                                  \
    static constexpr decltype(auto) Invoke(                                  \
        Functor&amp;&amp; functor,                                                   \
        std::index_sequence&lt;Indexes...&gt;,                                     \
        BoundArgumentsTupleType&amp;&amp; bound_arguments,                           \
        RunArgumentTypes&amp;&amp;... run_arguments) {                               \
      return MemberFunctionInvoke(                                           \
          std::forward&lt;Functor&gt;(                                             \
              functor), /* NOLINTBEGIN(bugprone-use-after-move) */           \
          std::get&lt;Indexes&gt;(std::forward&lt;BoundArgumentsTupleType&gt;(           \
              bound_arguments))..., /* NOLINTEND(bugprone-use-after-move) */ \
          std::forward&lt;RunArgumentTypes&gt;(run_arguments)...);                 \
    }                                                                        \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="base/bind_internals.h" line="180" column="9" bodyfile="base/bind_internals.h" bodystart="180" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="base/bind_internals.h"/>
  </compounddef>
</doxygen>
