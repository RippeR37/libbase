<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.9.8" xml:lang="en-US">
  <compound refid="classbase_1_1AutoReset" kind="class"><name>base::AutoReset</name>
    <member refid="classbase_1_1AutoReset_1a10dd1accc16d3f8507dff78f99ac7654" kind="variable"><name>variable_</name></member>
    <member refid="classbase_1_1AutoReset_1a4d0292a6b3b8597b75e671e0bba9725c" kind="variable"><name>original_value_</name></member>
    <member refid="classbase_1_1AutoReset_1a7265697adbad6cbb54ed565522999a74" kind="function"><name>AutoReset</name></member>
    <member refid="classbase_1_1AutoReset_1a637a2d61eccb78e5d4f4a4f563341cb9" kind="function"><name>~AutoReset</name></member>
    <member refid="classbase_1_1AutoReset_1aa504dd05aab8e2401842ce34db440c6d" kind="function"><name>AutoReset</name></member>
    <member refid="classbase_1_1AutoReset_1a73d1f2ebf97c04a0964ca195bf9e19e9" kind="function"><name>operator=</name></member>
  </compound>
  <compound refid="classbase_1_1AutoSignaller" kind="class"><name>base::AutoSignaller</name>
    <member refid="classbase_1_1AutoSignaller_1a777ca84550eb220cc1c3b630ac1b6a4f" kind="variable"><name>event_</name></member>
    <member refid="classbase_1_1AutoSignaller_1adf524c48ffa51e4255a7a098f6381ae0" kind="function"><name>AutoSignaller</name></member>
    <member refid="classbase_1_1AutoSignaller_1aa6c5f5a45c6f239c85c0b0702b1dceb0" kind="function"><name>AutoSignaller</name></member>
    <member refid="classbase_1_1AutoSignaller_1aef07a32092119fc60d5fc65ee88d72c8" kind="function"><name>~AutoSignaller</name></member>
    <member refid="classbase_1_1AutoSignaller_1a498e253ace1f7da47d860c07c0f5de3b" kind="function"><name>AutoSignaller</name></member>
    <member refid="classbase_1_1AutoSignaller_1a81e7536899a5fc79c8d18e8add85473c" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1AutoSignaller_1a3c47160853b62c302939429482463061" kind="function"><name>SignalAndReset</name></member>
    <member refid="classbase_1_1AutoSignaller_1a6a5fb9aea80fc151416606632cb4f254" kind="function"><name>Cancel</name></member>
  </compound>
  <compound refid="structbase_1_1DelayedTaskManager_1_1DelayedTask" kind="struct"><name>base::DelayedTaskManager::DelayedTask</name>
    <member refid="structbase_1_1DelayedTaskManager_1_1DelayedTask_1af064cc901a905be084a8c4efd85ff4cc" kind="variable"><name>start_time</name></member>
    <member refid="structbase_1_1DelayedTaskManager_1_1DelayedTask_1afc8bc11d67fa3d8fad636d75e6da5c26" kind="variable"><name>message_pump</name></member>
    <member refid="structbase_1_1DelayedTaskManager_1_1DelayedTask_1a8a6eb4f05ac8dbea137500026076f419" kind="variable"><name>pending_task</name></member>
    <member refid="structbase_1_1DelayedTaskManager_1_1DelayedTask_1a0c8dd0b4eb92005bdaef67115fb2a9cb" kind="function"><name>operator&lt;</name></member>
  </compound>
  <compound refid="classbase_1_1DelayedTaskManager" kind="class"><name>base::DelayedTaskManager</name>
    <member refid="classbase_1_1DelayedTaskManager_1ac9d3300b62bc4a04ea5e2ec6610d629a" kind="typedef"><name>TimeTicksProvider</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1ac748e36421eb3f3f26b743d21687ec24" kind="variable"><name>time_ticks_provider_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1ab3a97441be25519d82c582aad572df60" kind="variable"><name>scheduler_thread_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a13a97d2eaf78929d67f209bfa8f2451a" kind="variable"><name>mutex_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1adf2f6e6dc4d32b550ca865e5df4d910d" kind="variable"><name>cond_var_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1ac740765f2e4a29ca334fc8a84fd424ea" kind="variable"><name>stopped_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a5f5c401d907e5b61fa54ec70b42549c8" kind="variable"><name>delayed_tasks_</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a12be0d5012fc8b0ab5132d6672b36fe8" kind="function"><name>DelayedTaskManager</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1ad8c722e9b4fc17b188268776e9e28f1d" kind="function"><name>~DelayedTaskManager</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a628c1ff42cfa24d5c7220188a48e172a" kind="function"><name>QueueDelayedTask</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1af944b7556677e697f297ca97d8f76914" kind="function"><name>ScheduleAllReadyTasksForTests</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a18b5d10b57262cbecc366c7c6183181e" kind="function"><name>ScheduleTasksUntilStop</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a2273e4a4e5c86f0081e3b2a05913d5ff" kind="function"><name>ScheduleAllReadyTasksLocked</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1a1e577676f7dd07afc0997dfa698e99db" kind="function"><name>WaitForNextTaskOrStopLocked</name></member>
    <member refid="classbase_1_1DelayedTaskManager_1aea36fc5ff0d4102be0835f0c1ac7a0a0" kind="function"><name>NextTaskRemainingDelayLocked</name></member>
  </compound>
  <compound refid="classbase_1_1DelayedTaskManagerSharedInstance" kind="class"><name>base::DelayedTaskManagerSharedInstance</name>
    <member refid="classbase_1_1DelayedTaskManagerSharedInstance_1ac98a4c20b64650e0ab5c26db4d8b7897" kind="variable"><name>mutex_</name></member>
    <member refid="classbase_1_1DelayedTaskManagerSharedInstance_1a46d5f34a809cb24e0324d8afcc620128" kind="variable"><name>current_manager_</name></member>
    <member refid="classbase_1_1DelayedTaskManagerSharedInstance_1a53ce86d55278653d0d2a25c486bb4e82" kind="function"><name>GetOrCreateSharedInstance</name></member>
    <member refid="classbase_1_1DelayedTaskManagerSharedInstance_1ae4809aaed58293984676b3287eeec5cd" kind="function"><name>GetInstance</name></member>
  </compound>
  <compound refid="classbase_1_1DoNothing" kind="class"><name>base::DoNothing</name>
    <member refid="classbase_1_1DoNothing_1a0a350093c4bf8eb1aaf4f029ab218f75" kind="function"><name>Once</name></member>
    <member refid="classbase_1_1DoNothing_1ae9b5b997f42523711e58f058d08f48ff" kind="function"><name>Repeatedly</name></member>
    <member refid="classbase_1_1DoNothing_1a8c48bb694fbfcce6cf47de3f31fd7952" kind="function"><name>operator OnceCallback&lt; void</name></member>
    <member refid="classbase_1_1DoNothing_1a7af651cb3350936ba7a3881d38769cc8" kind="function"><name>operator RepeatingCallback&lt; void</name></member>
  </compound>
  <compound refid="classbase_1_1ElapsedTimer" kind="class"><name>base::ElapsedTimer</name>
    <member refid="classbase_1_1ElapsedTimer_1a31ba10a7a6c8fe935de0889be3de1621" kind="variable"><name>begin_</name></member>
    <member refid="classbase_1_1ElapsedTimer_1aa93a32ff68c02829b366c103ff3ec828" kind="function"><name>ElapsedTimer</name></member>
    <member refid="classbase_1_1ElapsedTimer_1a12873678c6cc48f60391552494b4f18e" kind="function"><name>ElapsedTimer</name></member>
    <member refid="classbase_1_1ElapsedTimer_1a3ad6e01e041acda9188d73d69c0ddc8d" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1ElapsedTimer_1aaa14cea196530fe84eefdfb809eda9ea" kind="function"><name>ElapsedTimer</name></member>
    <member refid="classbase_1_1ElapsedTimer_1acdb60f835a7e26039bb575136d25c651" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1ElapsedTimer_1aba909c5627ae009567b86de5b18aec32" kind="function"><name>Elapsed</name></member>
    <member refid="classbase_1_1ElapsedTimer_1a95389ecb21c36f350f85ce59484624c6" kind="function"><name>Begin</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IdentityType" kind="struct"><name>base::traits::IdentityType</name>
    <member refid="structbase_1_1traits_1_1IdentityType_1ad50c7268bc81991039bc3d822f3b4f41" kind="typedef"><name>type</name></member>
  </compound>
  <compound refid="structbase_1_1InitOptions" kind="struct"><name>base::InitOptions</name>
    <member refid="structbase_1_1InitOptions_1ac31d533e683053e855b347baf9b31324" kind="variable"><name>LogToStderr</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsCapturelessLambda" kind="struct"><name>base::traits::IsCapturelessLambda</name>
    <member refid="structbase_1_1traits_1_1IsCapturelessLambda_1a482d7ec84eae535956d63758eabe11a1" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsCapturelessLambda_3_01Lambda_00_01std_1_1enable__if__t_3_01traits_1_1If8dd78fe42ca6c93819d1e3d1f57c337" kind="struct"><name>base::traits::IsCapturelessLambda&lt; Lambda, std::enable_if_t&lt; traits::IsCapturelessLambdaSfinaeV&lt; Lambda &gt; &gt; &gt;</name>
    <member refid="structbase_1_1traits_1_1IsCapturelessLambda_3_01Lambda_00_01std_1_1enable__if__t_3_01traits_1_1If8dd78fe42ca6c93819d1e3d1f57c337_1a34b8ddf58d2100ec2934ef4eec35f450" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsFunctionPointer" kind="struct"><name>base::traits::IsFunctionPointer</name>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsFunctionPointer_3_01T_07_5_08_07Args_8_8_8_08_4" kind="struct"><name>base::traits::IsFunctionPointer&lt; T(*)(Args...)&gt;</name>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsOnceCallbackType" kind="struct"><name>base::traits::IsOnceCallbackType</name>
    <member refid="structbase_1_1traits_1_1IsOnceCallbackType_1a544a30dd7a34277c8ef37d3acb9116d2" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsOnceCallbackType_3_01OnceCallback_3_01CallbackSignatureType_01_4_01_4" kind="struct"><name>base::traits::IsOnceCallbackType&lt; OnceCallback&lt; CallbackSignatureType &gt; &gt;</name>
    <member refid="structbase_1_1traits_1_1IsOnceCallbackType_3_01OnceCallback_3_01CallbackSignatureType_01_4_01_4_1aa69065245dae45eb86cb45cf05b76913" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsRepeatingCallbackType" kind="struct"><name>base::traits::IsRepeatingCallbackType</name>
    <member refid="structbase_1_1traits_1_1IsRepeatingCallbackType_1aa25b98e33e793882474717cd8454007a" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1IsRepeatingCallbackType_3_01RepeatingCallback_3_01CallbackSignatureType_01_4_01_4" kind="struct"><name>base::traits::IsRepeatingCallbackType&lt; RepeatingCallback&lt; CallbackSignatureType &gt; &gt;</name>
    <member refid="structbase_1_1traits_1_1IsRepeatingCallbackType_3_01RepeatingCallback_3_01CallbackSignatureType_01_4_01_4_1ae54bc551c1d067469b3ad81d075234d7" kind="variable"><name>value</name></member>
  </compound>
  <compound refid="classbase_1_1MessageLoop" kind="class"><name>base::MessageLoop</name>
    <member refid="classbase_1_1MessageLoop_1aab518aebbb0c7c974ddc3c080479b133" kind="function"><name>~MessageLoop</name></member>
    <member refid="classbase_1_1MessageLoop_1a7a6f4fe9fb80ab834fa0ef3aedc34bba" kind="function"><name>RunOnce</name></member>
    <member refid="classbase_1_1MessageLoop_1a6c675774a48b6b26707b0c4dffd4f739" kind="function"><name>RunUntilIdle</name></member>
    <member refid="classbase_1_1MessageLoop_1a9c0ac0bf7e66eedaa341e3e8f09473ad" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1MessageLoop_1aff7b918225bbb22dbbc5b3b690076c24" kind="function"><name>Stop</name></member>
  </compound>
  <compound refid="classbase_1_1MessageLoopImpl" kind="class"><name>base::MessageLoopImpl</name>
    <member refid="classbase_1_1MessageLoopImpl_1a0d179d192d849fbbbb5b8e158558fc5c" kind="variable"><name>set_scoped_handles_</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1ab3ffc6406f8b085b4d1a6d8ad4159a5b" kind="variable"><name>executor_id_</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a377b7843e8640be414801552b32603eb" kind="variable"><name>message_pump_</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a2482a372865a8e8e7feacac76a010cd5" kind="variable"><name>is_stopped_</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a8aba5c42f422c4bb4735f681b960d5e3" kind="function"><name>MessageLoopImpl</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a1580665826efd752968f67d60a45f94a" kind="function"><name>~MessageLoopImpl</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1afdc86521f2da2b8596ce2454f9183410" kind="function"><name>RunOnce</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a9bfc998b6c25bd66065acbd530209bcb" kind="function"><name>RunUntilIdle</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a65923f4c8f5a862b9a1cf43a5ddf5a67" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a247e085521238cd530509b3297ecbc65" kind="function"><name>Stop</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a0bd3ebfd9ec715af1d9c50a087f7451b" kind="function"><name>DoRunOnce</name></member>
    <member refid="classbase_1_1MessageLoopImpl_1a27bcbc6e07db724bf18963444c0a925a" kind="function"><name>RunUntilIdleOrStop</name></member>
  </compound>
  <compound refid="classbase_1_1MessagePump" kind="class"><name>base::MessagePump</name>
    <member refid="classbase_1_1MessagePump_1a3c95e47c66c83ca726a9e0735be08e49" kind="typedef"><name>ExecutorId</name></member>
    <member refid="classbase_1_1MessagePump_1a345b0ddb4feb7108fa525e4e7a141429" kind="function"><name>~MessagePump</name></member>
    <member refid="classbase_1_1MessagePump_1a0e6cff7573355dc1275c072f755b1fbe" kind="function"><name>GetNextPendingTask</name></member>
    <member refid="classbase_1_1MessagePump_1ad8c3cd63106f10e1227af88faffe13b3" kind="function"><name>QueuePendingTask</name></member>
    <member refid="classbase_1_1MessagePump_1ab63cb2144c3bea2e80dc9d9d20f82c8a" kind="function"><name>Stop</name></member>
  </compound>
  <compound refid="classbase_1_1MessagePumpImpl" kind="class"><name>base::MessagePumpImpl</name>
    <member refid="classbase_1_1MessagePumpImpl_1a78a51dd93d9129e108399c525fbe1417" kind="typedef"><name>PendingTaskList</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a24b52dbd1ffa6b97453e1da43e0cb660" kind="typedef"><name>PendingTaskIter</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a950f6c6e127fab8205e08aaa2941bd75" kind="variable"><name>mutex_</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1ab4e782e3097fadd1ebfd3305a1e11f53" kind="variable"><name>cond_var_</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a6507ca1e00929799e95a06f09216fd1c" kind="variable"><name>stopped_</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a11879f65d7a804c75af1f0a7516d6c07" kind="variable"><name>pending_tasks_</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a13cf99d270cff8c5e6cacdd34beef4ed" kind="variable"><name>active_sequences_</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a47605e5fdd13b6ded293801839a70e6f" kind="function"><name>MessagePumpImpl</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a1940d6374dc4b7a7dc55da67e128c9db" kind="function"><name>GetNextPendingTask</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a7a4271b179751b6b90207f3ae11a796a" kind="function"><name>QueuePendingTask</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a3a507baa5d43f106293e068dae329204" kind="function"><name>Stop</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a38592d93eae86a65bc327cf24efe361e" kind="function"><name>GetNextPendingTask_Locked</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1aa86555e478ed46ca235142d17dc54c2e" kind="function"><name>IsTaskFromSequenceCurrentlyProcessed_Locked</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a9160dc0a79ef233d6690e0c8c72118ee" kind="function"><name>HasAllowedPendingTasks_Locked</name></member>
    <member refid="classbase_1_1MessagePumpImpl_1a4242f3cc5b4df4bfa2b44649be589d6f" kind="function"><name>FindFirstAllowedPendingTaskIter_Locked</name></member>
  </compound>
  <compound refid="classbase_1_1OnceCallback" kind="class"><name>base::OnceCallback</name>
  </compound>
  <compound refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4" kind="class"><name>base::OnceCallback&lt; ReturnType(ArgumentTypes...)&gt;</name>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ab3e8d31fb41f1d987dd3cfb528f066be" kind="variable"><name>impl_</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a71d631c324d0eccd822e8e5d028aa958" kind="function"><name>OnceCallback</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a22d95f7c7f398f27ac8891c6550b9ba5" kind="function"><name>OnceCallback</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a364c444c897b1cb4e67c57f8ba0410b8" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a94a574e57407c986c8dfe8f343b10101" kind="function"><name>OnceCallback</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a0624a16d8765a6ead692686ada7662c9" kind="function"><name>operator bool</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ab482fd876c0fd193db73b8ab1e4e75b2" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a824440c64f22532dbda9629364bb50d6" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a4f095740acbe9a29a6725ede2a78f555" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1OnceCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a4d4f4cf235e18561de3f9beb6f93bd0c" kind="function"><name>OnceCallback</name></member>
  </compound>
  <compound refid="structbase_1_1MessagePump_1_1PendingTask" kind="struct"><name>base::MessagePump::PendingTask</name>
    <member refid="structbase_1_1MessagePump_1_1PendingTask_1acd75aef9e6210bb40f8cb7cf5ac90024" kind="variable"><name>task</name></member>
    <member refid="structbase_1_1MessagePump_1_1PendingTask_1a51dfb7b47e931c15eb51da5da8c994b9" kind="variable"><name>sequence_id</name></member>
    <member refid="structbase_1_1MessagePump_1_1PendingTask_1a14f2b54624ce1f6c52e802f9d0ada6ee" kind="variable"><name>allowed_executor_id</name></member>
    <member refid="structbase_1_1MessagePump_1_1PendingTask_1a47b67d2a80dcc0fd9193d1bce1f5a064" kind="variable"><name>target_task_runner</name></member>
    <member refid="structbase_1_1MessagePump_1_1PendingTask_1afddc69f1f5ed027972c4e392f4274c16" kind="function"><name>operator bool</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1RemoveCVRef" kind="struct"><name>base::traits::RemoveCVRef</name>
    <member refid="structbase_1_1traits_1_1RemoveCVRef_1ab4b2cd897d09ed53501cfc76cbe632d1" kind="typedef"><name>type</name></member>
  </compound>
  <compound refid="classbase_1_1RepeatingCallback" kind="class"><name>base::RepeatingCallback</name>
  </compound>
  <compound refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4" kind="class"><name>base::RepeatingCallback&lt; ReturnType(ArgumentTypes...)&gt;</name>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a08665748d665db0b751bbf236d2f8e14" kind="typedef"><name>ImplPtr</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ab79705700a0be89a31bf5dc363200944" kind="variable"><name>impl_</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a48bde408be8e61a2e269d76983a0b9b0" kind="function"><name>RepeatingCallback</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a1d315fdb663e1c69010f744f403187bb" kind="function"><name>RepeatingCallback</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ac6a5a521fb23dd88ff5feb10c4e25c89" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ab997a844fbe4075dc0dbb68c452db5bf" kind="function"><name>RepeatingCallback</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a855272dc4a21f7661d1587bbc901989c" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a23353b9a1c5f3dababcad6541b4b3b98" kind="function"><name>operator bool</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1aac04ced0f9b3561d9b371f9476b24316" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a3a25803935c15488fc5ce7c066d9b32c" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1adaf598e03b1e57809f228ffd7734d897" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a886a67ee5dbabfb4bba5a33e97afa7e0" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a336459c00b8bdc307f4ff410338ad043" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a5d6b717ce567da3199cf8d1e2dd7dc3c" kind="function"><name>Then</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1a27416093cada9029837b98ee35f5ac79" kind="function"><name>RepeatingCallback</name></member>
    <member refid="classbase_1_1RepeatingCallback_3_01ReturnType_07ArgumentTypes_8_8_8_08_4_1ae24d780e454b01d7d3bd21af10fc48fa" kind="function"><name>CloneImpl</name></member>
  </compound>
  <compound refid="classbase_1_1RunLoop" kind="class"><name>base::RunLoop</name>
    <member refid="classbase_1_1RunLoop_1adc5c696f63ecca86e7222f597ea98b54" kind="variable"><name>scoped_sequence_id_</name></member>
    <member refid="classbase_1_1RunLoop_1a789d9b2dd6ca46ded7a88a07208f54a5" kind="variable"><name>scoped_task_runner_handle_</name></member>
    <member refid="classbase_1_1RunLoop_1a340018e6e30d8a2c0b7500f2bba8763f" kind="variable"><name>sequence_id_</name></member>
    <member refid="classbase_1_1RunLoop_1a2e58d25c8d2d082165fa09b809a87723" kind="variable"><name>task_runner_</name></member>
    <member refid="classbase_1_1RunLoop_1a17076c6b7704fc7b812601e652bfe9bb" kind="variable"><name>message_loop_</name></member>
    <member refid="classbase_1_1RunLoop_1aac7a9aa5ad6d06a7821900520463ee8a" kind="function"><name>RunLoop</name></member>
    <member refid="classbase_1_1RunLoop_1af827fc335dd535c24f6542cd40849830" kind="function"><name>~RunLoop</name></member>
    <member refid="classbase_1_1RunLoop_1aee47b4fe35713fd53e9efe4a9e506b0c" kind="function"><name>TaskRunner</name></member>
    <member refid="classbase_1_1RunLoop_1a60cf81fcc08c4a703682302716770e51" kind="function"><name>RunOnce</name></member>
    <member refid="classbase_1_1RunLoop_1a74e7cbe4abe02750ae43656b572b6b0b" kind="function"><name>RunUntilIdle</name></member>
    <member refid="classbase_1_1RunLoop_1a22a473869aeff684451c584905cc180e" kind="function"><name>Run</name></member>
    <member refid="classbase_1_1RunLoop_1ac10b2c2f375f2c0aca8e4992ff89874d" kind="function"><name>Quit</name></member>
    <member refid="classbase_1_1RunLoop_1a51c18dc7141831822585711939d8d67b" kind="function"><name>Quit</name></member>
    <member refid="classbase_1_1RunLoop_1a1ab0fa7bb513855d9da267b17eea9ebf" kind="function"><name>QuitClosure</name></member>
    <member refid="classbase_1_1RunLoop_1a67c4d21cf75fd2afd6663fd1f9893938" kind="function"><name>QuitCallback</name></member>
  </compound>
  <compound refid="classbase_1_1ScopedClosureRunner" kind="class"><name>base::ScopedClosureRunner</name>
    <member refid="classbase_1_1ScopedClosureRunner_1a45ad3bce9eeb47588f80afcd717d3873" kind="variable"><name>closure_</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a8319a558edccf6ee0a7a8c3aeba1abe3" kind="function"><name>ScopedClosureRunner</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1addd46da194d1b744d55de28085851e33" kind="function"><name>ScopedClosureRunner</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a71d33ba78f84c116bafff9df5afb861c" kind="function"><name>ScopedClosureRunner</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a46a443508b9dc7d60e2b686fcc97960e" kind="function"><name>~ScopedClosureRunner</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a6a4cfb8f90eb4b3cb132c12662c2197e" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a67f68859ab881d6c1c296acf50de3c9c" kind="function"><name>operator bool</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a86376b51be500fe2bbbca458389ca899" kind="function"><name>RunAndReset</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a376c5a66e962144f67fefdf8aef5a09c" kind="function"><name>ReplaceClosure</name></member>
    <member refid="classbase_1_1ScopedClosureRunner_1a9be4d4cc5c6f4fae5a3582b053cdf709" kind="function"><name>Release</name></member>
  </compound>
  <compound refid="classbase_1_1SequenceChecker" kind="class"><name>base::SequenceChecker</name>
    <member refid="classbase_1_1SequenceChecker_1a1bccd703504ce31060923ea50d792c11" kind="variable"><name>sequence_id_</name></member>
    <member refid="classbase_1_1SequenceChecker_1a2a22126be739e6d2d6491d3493d862be" kind="function"><name>SequenceChecker</name></member>
    <member refid="classbase_1_1SequenceChecker_1af3a58572f478fb9a4189628be1203aea" kind="function"><name>~SequenceChecker</name></member>
    <member refid="classbase_1_1SequenceChecker_1a78d3e9c16f32259c22e36f359aee37d8" kind="function"><name>SequenceChecker</name></member>
    <member refid="classbase_1_1SequenceChecker_1ab5157285224c3ed1870fc0a20637a732" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1SequenceChecker_1a593dd430ffcd96ec01c079e4535a1eb9" kind="function"><name>CalledOnValidSequence</name></member>
    <member refid="classbase_1_1SequenceChecker_1a4c977b6263c6ef0646a6a9c259b398ad" kind="function"><name>DetachFromSequence</name></member>
  </compound>
  <compound refid="classbase_1_1SequencedTaskRunner" kind="class"><name>base::SequencedTaskRunner</name>
    <member refid="classbase_1_1SequencedTaskRunner_1ad8453ef90f4052b0bba4df86f7b65d36" kind="function"><name>RunsTasksInCurrentSequence</name></member>
    <member refid="classbase_1_1SequencedTaskRunner_1a51c585c600a5469711c6a15ea673f141" kind="function"><name>DeleteSoon</name></member>
    <member refid="classbase_1_1SequencedTaskRunner_1aae581e5ac5ec7e992f76c9c221017410" kind="function"><name>DeleteSoon</name></member>
  </compound>
  <compound refid="classbase_1_1SequencedTaskRunnerHandle" kind="class"><name>base::SequencedTaskRunnerHandle</name>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1a500c8d6535cbd0fdf32c928051a4fb07" kind="variable"><name>task_runner_</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1a9fa2f0a50051da8a2e36510145e8538c" kind="function"><name>Get</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1ac4bd8c758c7433724a41b64c7c287aa9" kind="function"><name>IsSet</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1a18f11f2b546c17bf17e4d51e6c744e7f" kind="function"><name>SequencedTaskRunnerHandle</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1abc60700dedf7772452a015e10acd8356" kind="function"><name>~SequencedTaskRunnerHandle</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1a8886f226df9d265fa543a2f87f230d3f" kind="function"><name>SequencedTaskRunnerHandle</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerHandle_1a416b764ca92915777112403d46e87cc3" kind="function"><name>operator=</name></member>
  </compound>
  <compound refid="classbase_1_1SequencedTaskRunnerImpl" kind="class"><name>base::SequencedTaskRunnerImpl</name>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1a34fca26bd95a95cf5288fab0169ffae6" kind="variable"><name>pump_</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1aac4da1a0905a7eb2bc9ca787256e1054" kind="variable"><name>sequence_id_</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1a75cd23c89a63a674c37894ebba2e9ff9" kind="variable"><name>delayed_task_manager_</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1aba920b070cf2dbe4367df2b7d89956a9" kind="function"><name>Create</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1ac021920cf85ed104caf05e18efe43c8e" kind="function"><name>PostDelayedTask</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1affa918990c534d2ba9837e7877b64ece" kind="function"><name>RunsTasksInCurrentSequence</name></member>
    <member refid="classbase_1_1SequencedTaskRunnerImpl_1acbba7ca16da2b71499ec9ca9a8089c3f" kind="function"><name>SequencedTaskRunnerImpl</name></member>
  </compound>
  <compound refid="classbase_1_1SequenceId" kind="class"><name>base::SequenceId</name>
    <member refid="classbase_1_1SequenceId_1a8f6f420f4a6895618851a20017f7babd" kind="variable"><name>id_</name></member>
    <member refid="classbase_1_1SequenceId_1a609c3e1feb2948ddba6fe7c67c6018c0" kind="function"><name>SequenceId</name></member>
    <member refid="classbase_1_1SequenceId_1a51cb58956371f3ad5adda7a9004e144c" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1SequenceId_1aea70d11a19abb986f9e6b1217625ad06" kind="function"><name>operator==</name></member>
    <member refid="classbase_1_1SequenceId_1ac7bb17d030b97d9ca13cd73746e40459" kind="function"><name>operator!=</name></member>
    <member refid="classbase_1_1SequenceId_1ad0d511f503e95f690e41f9930eb97b9d" kind="function"><name>SequenceId</name></member>
  </compound>
  <compound refid="classbase_1_1SingleThreadTaskRunner" kind="class"><name>base::SingleThreadTaskRunner</name>
    <member refid="classbase_1_1SingleThreadTaskRunner_1a6b8f4a1819f5237cad57cd15c24e6572" kind="function"><name>BelongsToCurrentThread</name></member>
  </compound>
  <compound refid="classbase_1_1SingleThreadTaskRunnerImpl" kind="class"><name>base::SingleThreadTaskRunnerImpl</name>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1a3109c232035265c37068bb4f1cb232f4" kind="variable"><name>pump_</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1a30ef1c83d92a33f8b392ff582f00ccb7" kind="variable"><name>sequence_id_</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1af00fce98f29b9f9cd34b634c8b62b31a" kind="variable"><name>executor_id_</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1aaba7fc1ca0918e0a04ba9ee253c8c5a1" kind="variable"><name>delayed_task_manager_</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1a3f4a18581be397970086b215e80d2bbe" kind="function"><name>Create</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1ae2b80e8a78fe95c1a81ae69f0bbd4065" kind="function"><name>PostDelayedTask</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1a4490fa95f9f592d657f1d7a87af26ae6" kind="function"><name>RunsTasksInCurrentSequence</name></member>
    <member refid="classbase_1_1SingleThreadTaskRunnerImpl_1a450585138cec302883f05bf55b7c08ea" kind="function"><name>SingleThreadTaskRunnerImpl</name></member>
  </compound>
  <compound refid="classbase_1_1SourceLocation" kind="class"><name>base::SourceLocation</name>
    <member refid="classbase_1_1SourceLocation_1a59194e3d96a36519c807ebc5f7ae960a" kind="variable"><name>file</name></member>
    <member refid="classbase_1_1SourceLocation_1a3ea4f1eaf17b58fc9d347bd3dd6a27c9" kind="variable"><name>line</name></member>
    <member refid="classbase_1_1SourceLocation_1a32f79b5f2b1421c87f0017fb90f17958" kind="function"><name>SourceLocation</name></member>
  </compound>
  <compound refid="classbase_1_1TaskRunner" kind="class"><name>base::TaskRunner</name>
    <member refid="classbase_1_1TaskRunner_1ab9c6a11cf7be935ed913c21979d580bd" kind="function"><name>~TaskRunner</name></member>
    <member refid="classbase_1_1TaskRunner_1afa234d22c5865bc0f5deff0cac900797" kind="function"><name>PostTask</name></member>
    <member refid="classbase_1_1TaskRunner_1a9718748b69467d9f2bfcdb31dd090792" kind="function"><name>PostDelayedTask</name></member>
    <member refid="classbase_1_1TaskRunner_1aba59920cc89afd3f4044629f5a20f9ab" kind="function"><name>PostTaskAndReply</name></member>
    <member refid="classbase_1_1TaskRunner_1a8ed5933dc9cedef9d5b3bc6daf417900" kind="function"><name>PostTaskAndReplyWithResult</name></member>
  </compound>
  <compound refid="classbase_1_1TaskRunnerImpl" kind="class"><name>base::TaskRunnerImpl</name>
    <member refid="classbase_1_1TaskRunnerImpl_1a7563c7baa76cee2b937a8472dd8d6f22" kind="variable"><name>pump_</name></member>
    <member refid="classbase_1_1TaskRunnerImpl_1afcd7a6b4bb64839e0d279e17e306b5af" kind="variable"><name>delayed_task_manager_</name></member>
    <member refid="classbase_1_1TaskRunnerImpl_1a1dba25b1b4d006e903a10cea0ac01957" kind="function"><name>Create</name></member>
    <member refid="classbase_1_1TaskRunnerImpl_1a9e8bd6be2656735b6198bdf2c42be050" kind="function"><name>PostDelayedTask</name></member>
    <member refid="classbase_1_1TaskRunnerImpl_1aaa7250924666e1ca59adbdf3d24d81c2" kind="function"><name>TaskRunnerImpl</name></member>
  </compound>
  <compound refid="classbase_1_1Thread" kind="class"><name>base::Thread</name>
    <member refid="classbase_1_1Thread_1aa63565663694a47e3ac77147a630a050" kind="variable"><name>message_loop_</name></member>
    <member refid="classbase_1_1Thread_1a56ffdce970c419df5aa601d45d60f112" kind="variable"><name>thread_</name></member>
    <member refid="classbase_1_1Thread_1a620e3dd5a2e0a9603278c2b37bb0349e" kind="variable"><name>sequence_id_</name></member>
    <member refid="classbase_1_1Thread_1afc6cb9559a93ca029cb511e3321a4e63" kind="variable"><name>task_runner_</name></member>
    <member refid="classbase_1_1Thread_1a12271f62c83de1937a6aa0eb6fc183da" kind="function"><name>Thread</name></member>
    <member refid="classbase_1_1Thread_1a6dad31657a300fdce9ed634fa5e7c565" kind="function"><name>~Thread</name></member>
    <member refid="classbase_1_1Thread_1a51440a09dd587f7d838839cf57327ee4" kind="function"><name>Start</name></member>
    <member refid="classbase_1_1Thread_1a2814120e495e0b92192de55b1aee3ee2" kind="function"><name>Stop</name></member>
    <member refid="classbase_1_1Thread_1a4f642c9022c17a2db7301e29bf0ffe31" kind="function"><name>Stop</name></member>
    <member refid="classbase_1_1Thread_1a62821970d1ce3d880cdb3cd76a769a30" kind="function"><name>Id</name></member>
    <member refid="classbase_1_1Thread_1ac25cb35ca93a1a9b6052fdf96c6e99a3" kind="function"><name>TaskRunner</name></member>
    <member refid="classbase_1_1Thread_1a587fe3d312974ebfe7518c09c79e8414" kind="function"><name>FlushForTesting</name></member>
  </compound>
  <compound refid="classbase_1_1ThreadPool" kind="class"><name>base::ThreadPool</name>
    <member refid="classbase_1_1ThreadPool_1ab2bb04e04d2a2eae10d7aed1b15beb03" kind="variable"><name>initial_size_</name></member>
    <member refid="classbase_1_1ThreadPool_1a85b23dacb595028f81a8a7c9cbe484d7" kind="variable"><name>pump_</name></member>
    <member refid="classbase_1_1ThreadPool_1a8ce77e75d24bf793f5244330d62d0742" kind="variable"><name>threads_</name></member>
    <member refid="classbase_1_1ThreadPool_1a68c6531d2ca5759e0291394ceef30aed" kind="variable"><name>task_runner_</name></member>
    <member refid="classbase_1_1ThreadPool_1a5aad2c135f3f22be3a2ce58a48a7292c" kind="variable"><name>random_generator_</name></member>
    <member refid="classbase_1_1ThreadPool_1a08d2d8d1e1e8d7fdee0cf25fd94c40c4" kind="function"><name>ThreadPool</name></member>
    <member refid="classbase_1_1ThreadPool_1a7a63d2fc9721d6f82de27428b949ca4d" kind="function"><name>~ThreadPool</name></member>
    <member refid="classbase_1_1ThreadPool_1abb969c95d62c3b34d2e532e2fbe1c0ba" kind="function"><name>Start</name></member>
    <member refid="classbase_1_1ThreadPool_1a0eab6fa26e638473d915ebe19ddc93da" kind="function"><name>Stop</name></member>
    <member refid="classbase_1_1ThreadPool_1a0a8bc37f2fffc3fce46f9c7a82ba3fb3" kind="function"><name>GetTaskRunner</name></member>
    <member refid="classbase_1_1ThreadPool_1a5e03394979b086fb50db1444002307f0" kind="function"><name>CreateSequencedTaskRunner</name></member>
    <member refid="classbase_1_1ThreadPool_1acc74d370c5bf105947a105d36df7dbbd" kind="function"><name>CreateSingleThreadTaskRunner</name></member>
  </compound>
  <compound refid="classbase_1_1Time" kind="class"><name>base::Time</name>
    <member refid="classbase_1_1Time_1a251c3ec434849fbad609811b307d59d4" kind="variable"><name>us_time_</name></member>
    <member refid="classbase_1_1Time_1a3992766dc5c29f992f2a1dd35eac6412" kind="function"><name>Now</name></member>
    <member refid="classbase_1_1Time_1ab40e71213b9391d0126454d342895b66" kind="function"><name>FromTimeT</name></member>
    <member refid="classbase_1_1Time_1aca39fadcbc9a283e0993d980f923fbb5" kind="function"><name>Time</name></member>
    <member refid="classbase_1_1Time_1a91a7dfa485fb6aa55b746095dd52cd8c" kind="function"><name>ToTimeT</name></member>
    <member refid="classbase_1_1Time_1ab725602c06c33ef6f654e4218712fb36" kind="function"><name>operator==</name></member>
    <member refid="classbase_1_1Time_1a4a5225407eb386e2a2917a6a95fd449c" kind="function"><name>operator!=</name></member>
    <member refid="classbase_1_1Time_1a0a96c11744d64aae8980af58cd93377f" kind="function"><name>operator&lt;</name></member>
    <member refid="classbase_1_1Time_1ab4767660d494debbe8aa6630e5d1d270" kind="function"><name>operator&gt;</name></member>
    <member refid="classbase_1_1Time_1a9f702f5b9942bb2d5b112de1308014fc" kind="function"><name>operator&lt;=</name></member>
    <member refid="classbase_1_1Time_1a1c13bc97f77a7e7403b454b1e815ce70" kind="function"><name>operator&gt;=</name></member>
    <member refid="classbase_1_1Time_1ac9412099c69412224edd1a764498d48f" kind="function"><name>operator+</name></member>
    <member refid="classbase_1_1Time_1ac16fa958b7845dc065317fdfc2a98070" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1Time_1a8416dbd1bdb32e4cefcb64fcf70df8d6" kind="function"><name>operator+=</name></member>
    <member refid="classbase_1_1Time_1ad2f253cf9f4adb4d409ea869d78e1068" kind="function"><name>operator-=</name></member>
    <member refid="classbase_1_1Time_1a6fc7635399c4e4c0a8826bf30028165c" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1Time_1af48af4faf69b785203e7ed5c44a355f0" kind="function"><name>Time</name></member>
  </compound>
  <compound refid="classbase_1_1TimeDelta" kind="class"><name>base::TimeDelta</name>
    <member refid="classbase_1_1TimeDelta_1a4638b7e7c4a9d32a59f736fe6e5ff8a2" kind="friend"><name>Time</name></member>
    <member refid="classbase_1_1TimeDelta_1a7498f214ba5f885cd8cf80e8d438ee83" kind="friend"><name>TimeTicks</name></member>
    <member refid="classbase_1_1TimeDelta_1a12a602de46a2cac41e585e01996b290d" kind="friend"><name>Days</name></member>
    <member refid="classbase_1_1TimeDelta_1ad90a56b6071315ba1a113d6c40d35adf" kind="friend"><name>Hours</name></member>
    <member refid="classbase_1_1TimeDelta_1abc1d59b4c858bb29a3bcde466c05bf29" kind="friend"><name>Minutes</name></member>
    <member refid="classbase_1_1TimeDelta_1aa600f610bec959ae4b5d55c4e945c37e" kind="friend"><name>Seconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a9067dba5c03d29a34b80269cf54eb022" kind="friend"><name>Milliseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1ab6151f0ea439cc1a43086f38ba704fb5" kind="friend"><name>Microseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a83d1fc4790a94fdffb4328427352aa5a" kind="friend"><name>Nanoseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a8e28623409fe5075fbe07ca0f326ad7a" kind="variable"><name>kNanosecondsInMicroseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a18f48b53c648646ab5d2b46461fdfb7c" kind="variable"><name>kMicrosecondsInMilliseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1aad82207ccb41126fe044f24cfa74359d" kind="variable"><name>kMicrosecondsInSeconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a889635d86f4cc29dfb29668466da93fb" kind="variable"><name>kMicrosecondsInMinutes</name></member>
    <member refid="classbase_1_1TimeDelta_1a72912619afd56bae7e00596c7246fe0b" kind="variable"><name>kMicrosecondsInHours</name></member>
    <member refid="classbase_1_1TimeDelta_1adc57331cd75b273935d7602506623057" kind="variable"><name>kMicrosecondsInDays</name></member>
    <member refid="classbase_1_1TimeDelta_1a7d3cb48a33fa7d3762eda89a8c13260d" kind="variable"><name>us_delta_</name></member>
    <member refid="classbase_1_1TimeDelta_1a4675140f14e29e27b04a2792a052a7d4" kind="function"><name>TimeDelta</name></member>
    <member refid="classbase_1_1TimeDelta_1af9fd37d4a9ff540e27d80794c326ca5f" kind="function"><name>IsZero</name></member>
    <member refid="classbase_1_1TimeDelta_1a7cba665f930396f8ab08ae6bcfe4e7d3" kind="function"><name>IsPositive</name></member>
    <member refid="classbase_1_1TimeDelta_1a7655c4963c15ac9488e069700c15c3b5" kind="function"><name>IsNegative</name></member>
    <member refid="classbase_1_1TimeDelta_1a14cfb6a109c6b358390c5305ef998058" kind="function"><name>InDays</name></member>
    <member refid="classbase_1_1TimeDelta_1a63ec1edcc96fec79298822522477dfd9" kind="function"><name>InHours</name></member>
    <member refid="classbase_1_1TimeDelta_1a7477bb883c32de060717e4151b30d26e" kind="function"><name>InMinutes</name></member>
    <member refid="classbase_1_1TimeDelta_1a3d5e3ccac26c0dbcca8d01fec5b6e711" kind="function"><name>InSecondsF</name></member>
    <member refid="classbase_1_1TimeDelta_1a526f219dfc59134824bfce2612f4f026" kind="function"><name>InSeconds</name></member>
    <member refid="classbase_1_1TimeDelta_1ab543a425ac14dbce22a17d02d49b18e8" kind="function"><name>InMillisecondsF</name></member>
    <member refid="classbase_1_1TimeDelta_1a397f244b9437a7cbf7b783758c2976fe" kind="function"><name>InMilliseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a386cd9d8658fcf4c3a8c2b2aa9816065" kind="function"><name>InMicroseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1a42176c1eabb2a680881f978fe7d85a38" kind="function"><name>InMicrosecondsF</name></member>
    <member refid="classbase_1_1TimeDelta_1acfac42aa04d86121864012f34a32c916" kind="function"><name>InNanoseconds</name></member>
    <member refid="classbase_1_1TimeDelta_1ab4eeb7dd3a587ba56a86ff69e3271747" kind="function"><name>operator+</name></member>
    <member refid="classbase_1_1TimeDelta_1a42551c388c4c923da2384ac0832ff05a" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1TimeDelta_1a348e7237f157db03192482c67d4dd536" kind="function"><name>operator+=</name></member>
    <member refid="classbase_1_1TimeDelta_1a27f32eb1fb79aeeb3c91c64d9be23520" kind="function"><name>operator-=</name></member>
    <member refid="classbase_1_1TimeDelta_1ab971fdf1edb294dddcc837d2c750216a" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1TimeDelta_1a1de70a6c03963d2312dc081f11f2a1a2" kind="function"><name>operator*</name></member>
    <member refid="classbase_1_1TimeDelta_1a87e0c51a426d84a1f7225d36f9c1bd01" kind="function"><name>operator/</name></member>
    <member refid="classbase_1_1TimeDelta_1a82282b8419b868d7d5756a7b5e97886b" kind="function"><name>operator*=</name></member>
    <member refid="classbase_1_1TimeDelta_1a53630c25f3e16751b670d737e7a6e100" kind="function"><name>operator/=</name></member>
    <member refid="classbase_1_1TimeDelta_1a3b9d9158b220e69b0b32d9fdad81715a" kind="function"><name>operator==</name></member>
    <member refid="classbase_1_1TimeDelta_1a459767659ae6bfdfe70ef50dae733135" kind="function"><name>operator!=</name></member>
    <member refid="classbase_1_1TimeDelta_1a45a5a653b6dc68a9220e21cdfe9f05bc" kind="function"><name>operator&lt;</name></member>
    <member refid="classbase_1_1TimeDelta_1ac1f39b28311a0c46680d567fb9cb3073" kind="function"><name>operator&lt;=</name></member>
    <member refid="classbase_1_1TimeDelta_1a6c2f782fde4040f59eadca9a97c32ede" kind="function"><name>operator&gt;</name></member>
    <member refid="classbase_1_1TimeDelta_1a716e310a61d898eb779bd25819744d9d" kind="function"><name>operator&gt;=</name></member>
    <member refid="classbase_1_1TimeDelta_1aea1dddff5a8d2a3bbf9303dcfc207b75" kind="function"><name>TimeDelta</name></member>
  </compound>
  <compound refid="classbase_1_1TimeTicks" kind="class"><name>base::TimeTicks</name>
    <member refid="classbase_1_1TimeTicks_1aa59d5617c51153e48f67724a2bce9f83" kind="variable"><name>us_time_</name></member>
    <member refid="classbase_1_1TimeTicks_1ac930797d6adfaa7e390fd77720eaf2d3" kind="function"><name>Now</name></member>
    <member refid="classbase_1_1TimeTicks_1a99a5600feae34c15ae0996902ce2915e" kind="function"><name>TimeTicks</name></member>
    <member refid="classbase_1_1TimeTicks_1a86752a5e11c55ec1f10e0d70c0025943" kind="function"><name>operator==</name></member>
    <member refid="classbase_1_1TimeTicks_1a2d60150f62b7d852267dfce000920610" kind="function"><name>operator!=</name></member>
    <member refid="classbase_1_1TimeTicks_1aac55b04cdd7d280ddd11542174ba0558" kind="function"><name>operator&lt;</name></member>
    <member refid="classbase_1_1TimeTicks_1aab5f0190e792702489d95c4766e173f5" kind="function"><name>operator&gt;</name></member>
    <member refid="classbase_1_1TimeTicks_1a9e3e3526a30a5c7a302fa4e38618b19b" kind="function"><name>operator&lt;=</name></member>
    <member refid="classbase_1_1TimeTicks_1abd79b00d48077e42efa5d28f0cc81c05" kind="function"><name>operator&gt;=</name></member>
    <member refid="classbase_1_1TimeTicks_1add0f8beb5540bfcc36516d94d9c90b90" kind="function"><name>operator+</name></member>
    <member refid="classbase_1_1TimeTicks_1a287b03eb08a17f6325fc61d3252442e6" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1TimeTicks_1aac47e4057634b10d71fc07193dda9f1c" kind="function"><name>operator+=</name></member>
    <member refid="classbase_1_1TimeTicks_1a58a21b97165a372db4b67aab79df2a39" kind="function"><name>operator-=</name></member>
    <member refid="classbase_1_1TimeTicks_1ab6ccfb98b6b6477759ecd351a9acf799" kind="function"><name>operator-</name></member>
    <member refid="classbase_1_1TimeTicks_1acaf72b63bf6a8f6fa22affa659473cf7" kind="function"><name>TimeTicks</name></member>
  </compound>
  <compound refid="structbase_1_1traits_1_1TypesRange" kind="struct"><name>base::traits::TypesRange</name>
  </compound>
  <compound refid="structbase_1_1traits_1_1TypesRange_3_01Offset_00_01TupleType_00_01std_1_1index__sequence_3_01Indexes_8_8_8_01_4_01_4" kind="struct"><name>base::traits::TypesRange&lt; Offset, TupleType, std::index_sequence&lt; Indexes... &gt; &gt;</name>
    <member refid="structbase_1_1traits_1_1TypesRange_3_01Offset_00_01TupleType_00_01std_1_1index__sequence_3_01Indexes_8_8_8_01_4_01_4_1a6b5ea4a71c4692b41b8ea847fe3daebd" kind="typedef"><name>type</name></member>
  </compound>
  <compound refid="classbase_1_1WaitableEvent" kind="class"><name>base::WaitableEvent</name>
    <member refid="classbase_1_1WaitableEvent_1a1ae0bd1854f158a2e51d47c4ca62669c" kind="enum"><name>ResetPolicy</name></member>
    <member refid="classbase_1_1WaitableEvent_1a1ae0bd1854f158a2e51d47c4ca62669ca840f73673d401f2e539743e82e167a45" kind="enumvalue"><name>kManual</name></member>
    <member refid="classbase_1_1WaitableEvent_1a1ae0bd1854f158a2e51d47c4ca62669ca0edd03ba1f5a73f26d1fd764255ddaa1" kind="enumvalue"><name>kAutomatic</name></member>
    <member refid="classbase_1_1WaitableEvent_1afe8f1067fb0b5a106ec1972ba82dec16" kind="enum"><name>InitialState</name></member>
    <member refid="classbase_1_1WaitableEvent_1afe8f1067fb0b5a106ec1972ba82dec16ab1a2f58031fe55282b5e4602f15878a4" kind="enumvalue"><name>kSignaled</name></member>
    <member refid="classbase_1_1WaitableEvent_1afe8f1067fb0b5a106ec1972ba82dec16aa5b666ee509848b4b936af1eebdf4e0f" kind="enumvalue"><name>kNotSignaled</name></member>
    <member refid="classbase_1_1WaitableEvent_1a3178add3b05ae0a6adb271a63bb8ad25" kind="variable"><name>reset_policy_</name></member>
    <member refid="classbase_1_1WaitableEvent_1ab53fa48decb447b71dd5ad6b82244a27" kind="variable"><name>is_signaled_</name></member>
    <member refid="classbase_1_1WaitableEvent_1a4f14812e0afbe1ceeb06e954788e4cd7" kind="variable"><name>mutex_</name></member>
    <member refid="classbase_1_1WaitableEvent_1ae4fb12a492da91882c4b2a3e717e3a1c" kind="variable"><name>cond_var_</name></member>
    <member refid="classbase_1_1WaitableEvent_1ae86f7de722fdf4be66891926d23e3d7f" kind="function"><name>WaitableEvent</name></member>
    <member refid="classbase_1_1WaitableEvent_1a1d730cf7b90819bf1d4c6478ad3a1ee7" kind="function"><name>~WaitableEvent</name></member>
    <member refid="classbase_1_1WaitableEvent_1aaffee60147e1703c142143f0c2fe9c13" kind="function"><name>Reset</name></member>
    <member refid="classbase_1_1WaitableEvent_1afecf4a5d465a6390fa6b0343ab6247af" kind="function"><name>Signal</name></member>
    <member refid="classbase_1_1WaitableEvent_1ad6b52afcae92d51e295b5a75cf145239" kind="function"><name>IsSignaled</name></member>
    <member refid="classbase_1_1WaitableEvent_1a2946fb7ff4c19c85393f62fb1fc248ef" kind="function"><name>Wait</name></member>
    <member refid="classbase_1_1WaitableEvent_1ae7c1fdde17c4a6043f718dc8ae63d49e" kind="function"><name>ResetLocked</name></member>
    <member refid="classbase_1_1WaitableEvent_1a0fd99e1deb04fb96ae5bd59e653212aa" kind="function"><name>IsSignaledLocked</name></member>
  </compound>
  <compound refid="classbase_1_1WeakPtr" kind="class"><name>base::WeakPtr</name>
    <member refid="classbase_1_1WeakPtr_1add7c6b3fe1ecccd0701b5eee62c039d8" kind="friend"><name>WeakPtrFactory&lt; T &gt;</name></member>
    <member refid="classbase_1_1WeakPtr_1a2df746dc8f5450b6f1eb70897d8d5c8b" kind="friend"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a091d88ccb4c1a1ef98964f2e344ef603" kind="variable"><name>ptr_</name></member>
    <member refid="classbase_1_1WeakPtr_1aabefcd34b122a9085d0ec831afaaa3df" kind="variable"><name>control_block_</name></member>
    <member refid="classbase_1_1WeakPtr_1a593073f4ffd33af1f1d290ce2b710f18" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1af560def9cea4c535f432b1635a18b53c" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a7ee04df3085dab2c26e37eaee6b241f6" kind="function"><name>~WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a0956d6e8683e5d73fac08f31d083b75d" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a34d1abe5a58d1e10d1f0c92475342559" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a30d68335661ff91e73056ce2d3359726" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1ab7eea26b60202a0d6a188ee194eb2e16" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1WeakPtr_1a77974385f99663e95330d089968a9df1" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1WeakPtr_1a6b567cb387f4003523dc4b0333938c13" kind="function"><name>operator-&gt;</name></member>
    <member refid="classbase_1_1WeakPtr_1aa10d7dfbca09bd5e29b83b986c0f19af" kind="function"><name>operator*</name></member>
    <member refid="classbase_1_1WeakPtr_1ada048b0c0ecde4169a2ddbcc3635a6f0" kind="function"><name>operator bool</name></member>
    <member refid="classbase_1_1WeakPtr_1a175893e4b01d7994b90b01913b9066a5" kind="function"><name>Get</name></member>
    <member refid="classbase_1_1WeakPtr_1ac70395b07480ad16a94fc23cd2f480a5" kind="function"><name>MaybeValid</name></member>
    <member refid="classbase_1_1WeakPtr_1ad24f334838c2b03c7fe5eb55d177f9c1" kind="function"><name>WasInvalidated</name></member>
    <member refid="classbase_1_1WeakPtr_1a57d1b9d289aa2e4793fe7d0b3f337021" kind="function"><name>WeakPtr</name></member>
    <member refid="classbase_1_1WeakPtr_1a9b8bf07810cb5a82071c26f4e8c762d0" kind="function"><name>IncreaseWeakCount</name></member>
    <member refid="classbase_1_1WeakPtr_1aaffad2cba42cf81c0d568056c6c38b46" kind="function"><name>DecreaseWeakCount</name></member>
  </compound>
  <compound refid="classbase_1_1WeakPtrFactory" kind="class"><name>base::WeakPtrFactory</name>
    <member refid="classbase_1_1WeakPtrFactory_1a984003fb0634f8968ee52dd7a336b03e" kind="variable"><name>ptr_</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a5e1ac5b2239749825535e0df78d645d2" kind="variable"><name>control_block_</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1ab3450b44b9ca94efbfd9e16dbf44b713" kind="function"><name>WeakPtrFactory</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a94a2f0de1f7f84d0dbb77e28fffb8336" kind="function"><name>WeakPtrFactory</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1adab821a64f513cf4c2c669bf9f502618" kind="function"><name>WeakPtrFactory</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a728c86bdc9f1ce1231081f234a0e06e7" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a021bcafec11558127e10bfb621176722" kind="function"><name>operator=</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a2509e66f4e82b2b5d39b758c54ad291d" kind="function"><name>GetWeakPtr</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a09b22af18f01b8ab874c8223c3cb14ce" kind="function"><name>InvalidateWeakPtrs</name></member>
    <member refid="classbase_1_1WeakPtrFactory_1a44f23b03f65020073523d9a669b96afc" kind="function"><name>HasWeakPtrs</name></member>
  </compound>
  <compound refid="namespacebase" kind="namespace"><name>base</name>
    <member refid="callback_8h_1a59567d24a110228ba40af5b34848458f" kind="typedef"><name>OnceClosure</name></member>
    <member refid="callback_8h_1ac4a76f1827e048560c85b9f94dd96ed4" kind="typedef"><name>RepeatingClosure</name></member>
    <member refid="barrier__callback_8h_1a514a483cf5a92ec926334a10a4e1a233" kind="function"><name>BarrierCallback</name></member>
    <member refid="barrier__callback_8h_1a2cb9f7f382fdcbf25d2f60b942660879" kind="function"><name>BarrierCallback</name></member>
    <member refid="barrier__closure_8h_1ac63e035ad926f27f95b2275245357c0e" kind="function"><name>BarrierClosure</name></member>
    <member refid="bind_8h_1a93f52b871dd8441675fd964165924e8f" kind="function"><name>BindOnce</name></member>
    <member refid="bind_8h_1af69e87ed12e057256882baa1052326e7" kind="function"><name>BindRepeating</name></member>
    <member refid="bind_8h_1ad5d66862bbd0dbeebce8e46adda08f8e" kind="function"><name>Unretained</name></member>
    <member refid="bind_8h_1ae9bbece310034980402ba6320c1e1801" kind="function"><name>RetainedRef</name></member>
    <member refid="bind_8h_1a757b196e60d6f4d93f8ec22d554fbf9a" kind="function"><name>Owned</name></member>
    <member refid="bind_8h_1a5452c26d25fe20be80ec370581653525" kind="function"><name>Owned</name></member>
    <member refid="bind_8h_1acfa44e3724b6e74d1bfbccba23bbf2c9" kind="function"><name>OwnedRef</name></member>
    <member refid="bind_8h_1a027b226247fe184c655649dc5767cfe9" kind="function"><name>IgnoreResult</name></member>
    <member refid="bind__post__task_8h_1a04bd769566ae6d4532f950e4626197ba" kind="function"><name>BindPostTask</name></member>
    <member refid="bind__post__task_8h_1a20e62f693034981ddd7a8178d180c0cb" kind="function"><name>BindPostTask</name></member>
    <member refid="bind__post__task_8h_1ac9a1db204b1778768527712f189c836d" kind="function"><name>BindToCurrentSequence</name></member>
    <member refid="bind__post__task_8h_1af680c7aa696c150746f3df19f4af6ace" kind="function"><name>BindToCurrentSequence</name></member>
    <member refid="callback__helpers_8h_1a05fed922487db2be71e14ef93d36ba34" kind="function"><name>SplitOnceCallback</name></member>
    <member refid="init_8h_1a3bbef369d24aa1cc8eedb3b6b33a2d29" kind="function"><name>Initialize</name></member>
    <member refid="init_8h_1afecfc13c50e2984c5dc873fba47c8841" kind="function"><name>InitializeForTests</name></member>
    <member refid="init_8h_1a73aeac72e46f9d795d43b5ed1f74a292" kind="function"><name>Deinitialize</name></member>
    <member refid="weak__ptr_8h_1a49d18eb459faf71b5a8700424c938a50" kind="function"><name>operator==</name></member>
    <member refid="weak__ptr_8h_1a3a91cebf3759df9d2d0ea7e75e48d9cd" kind="function"><name>operator==</name></member>
    <member refid="weak__ptr_8h_1a7fabe800bcebfdb72d533eebd41a466d" kind="function"><name>operator!=</name></member>
    <member refid="weak__ptr_8h_1a01deba814835fc3363db9f15290d8e77" kind="function"><name>operator!=</name></member>
    <member refid="time__delta_8h_1a9014824d944120c7546e22c2e9af63ea" kind="function"><name>Days</name></member>
    <member refid="time__delta_8h_1afd9a85b6ee9d335db49969c604b7ca7f" kind="function"><name>Hours</name></member>
    <member refid="time__delta_8h_1a1456698c7bcbf5249cf25bb72952fe02" kind="function"><name>Minutes</name></member>
    <member refid="time__delta_8h_1a0c5abc2df90df6fcd0bf3c856e7c150a" kind="function"><name>Seconds</name></member>
    <member refid="time__delta_8h_1adc43a089f5d5ba5fcb30fc98cb6a231c" kind="function"><name>Milliseconds</name></member>
    <member refid="time__delta_8h_1a11e670d8718883d973e2fb31d25739ea" kind="function"><name>Microseconds</name></member>
    <member refid="time__delta_8h_1a1992a1bf37f7c54a97c77d82d3a8687e" kind="function"><name>Nanoseconds</name></member>
  </compound>
  <compound refid="namespacebase_1_1traits" kind="namespace"><name>base::traits</name>
    <member refid="type__traits_8h_1a4bba8383fa06060652b703dcee1e01c1" kind="typedef"><name>IdentityT</name></member>
    <member refid="type__traits_8h_1abe8425c54607044479761476ec3ce239" kind="typedef"><name>RemoveCVRefT</name></member>
    <member refid="type__traits_8h_1aa86db756ce6265af44a292ec66cbe3a8" kind="typedef"><name>TypesRangeT</name></member>
    <member refid="type__traits_8h_1ab7acc86ecbfa1c9d19f5e3bbddc3aaed" kind="typedef"><name>HeadTypesRangeT</name></member>
    <member refid="callback_8h_1af6b47086eb59b691e2bafda006a39ee8" kind="variable"><name>IsOnceCallbackV</name></member>
    <member refid="callback_8h_1aa05fd00751e9212347ae5e2bc132d21b" kind="variable"><name>IsRepeatingCallbackV</name></member>
    <member refid="callback_8h_1aacae931da3f6079b8f832b3fab110386" kind="variable"><name>IsCallbackV</name></member>
    <member refid="type__traits_8h_1ab7cc3c8e03545cc299eed463e370e728" kind="variable"><name>IsFunctionPointerV</name></member>
    <member refid="type__traits_8h_1a0c6de81cab3853d2f0f0c8bd6234bcce" kind="variable"><name>IsCapturelessLambdaSfinaeV</name></member>
    <member refid="type__traits_8h_1a126f4cf1dd4ff094880392783a63472a" kind="variable"><name>IsCapturelessLambdaV</name></member>
  </compound>
  <compound refid="namespacestd" kind="namespace"><name>std</name>
  </compound>
  <compound refid="auto__reset_8h" kind="file"><name>auto_reset.h</name>
  </compound>
  <compound refid="barrier__callback_8h" kind="file"><name>barrier_callback.h</name>
  </compound>
  <compound refid="barrier__closure_8h" kind="file"><name>barrier_closure.h</name>
  </compound>
  <compound refid="bind_8h" kind="file"><name>bind.h</name>
  </compound>
  <compound refid="bind__internals_8h" kind="file"><name>bind_internals.h</name>
    <member refid="bind__internals_8h_1a171f2cd1b1b2b7f34c79e87666f560ff" kind="define"><name>LIBBASE_IMPL_MEMBER_FUNCTION_TRAIT</name></member>
  </compound>
  <compound refid="bind__post__task_8h" kind="file"><name>bind_post_task.h</name>
  </compound>
  <compound refid="callback_8h" kind="file"><name>callback.h</name>
  </compound>
  <compound refid="callback__forward_8h" kind="file"><name>callback_forward.h</name>
  </compound>
  <compound refid="callback__helpers_8h" kind="file"><name>callback_helpers.h</name>
  </compound>
  <compound refid="callback__iface_8h" kind="file"><name>callback_iface.h</name>
  </compound>
  <compound refid="callback__internals_8h" kind="file"><name>callback_internals.h</name>
  </compound>
  <compound refid="logging_8h" kind="file"><name>logging.h</name>
    <member refid="logging_8h_1a9f918755b601cf4bffca775992e6fb90" kind="define"><name>NOMINMAX</name></member>
  </compound>
  <compound refid="weak__ptr_8h" kind="file"><name>weak_ptr.h</name>
  </compound>
  <compound refid="message__loop_8h" kind="file"><name>message_loop.h</name>
  </compound>
  <compound refid="message__loop__impl_8h" kind="file"><name>message_loop_impl.h</name>
  </compound>
  <compound refid="message__pump_8h" kind="file"><name>message_pump.h</name>
  </compound>
  <compound refid="message__pump__impl_8h" kind="file"><name>message_pump_impl.h</name>
  </compound>
  <compound refid="run__loop_8h" kind="file"><name>run_loop.h</name>
  </compound>
  <compound refid="win__message__loop__attachment_8h" kind="file"><name>win_message_loop_attachment.h</name>
  </compound>
  <compound refid="wx__message__loop__attachment_8h" kind="file"><name>wx_message_loop_attachment.h</name>
  </compound>
  <compound refid="net__thread_8h" kind="file"><name>net_thread.h</name>
  </compound>
  <compound refid="net__thread__impl_8h" kind="file"><name>net_thread_impl.h</name>
  </compound>
  <compound refid="init_8h" kind="file"><name>init.h</name>
  </compound>
  <compound refid="net_2init_8h" kind="file"><name>init.h</name>
  </compound>
  <compound refid="request__cancellation__token_8h" kind="file"><name>request_cancellation_token.h</name>
  </compound>
  <compound refid="resource__request_8h" kind="file"><name>resource_request.h</name>
  </compound>
  <compound refid="resource__response_8h" kind="file"><name>resource_response.h</name>
  </compound>
  <compound refid="result_8h" kind="file"><name>result.h</name>
  </compound>
  <compound refid="simple__url__loader_8h" kind="file"><name>simple_url_loader.h</name>
  </compound>
  <compound refid="url__request_8h" kind="file"><name>url_request.h</name>
  </compound>
  <compound refid="windows_8h" kind="file"><name>windows.h</name>
  </compound>
  <compound refid="sequence__checker_8h" kind="file"><name>sequence_checker.h</name>
    <member refid="sequence__checker_8h_1a6e1de0e8bf469bc7898cbaf88725254f" kind="define"><name>SEQUENCE_CHECKER</name></member>
    <member refid="sequence__checker_8h_1a4d9e87e3566670d3068ebfaef0970676" kind="define"><name>DCHECK_CALLED_ON_VALID_SEQUENCE</name></member>
    <member refid="sequence__checker_8h_1ae91683dfb0f104276ed8956474f261da" kind="define"><name>DETACH_FROM_SEQUENCE</name></member>
  </compound>
  <compound refid="sequence__id_8h" kind="file"><name>sequence_id.h</name>
  </compound>
  <compound refid="sequenced__task__runner_8h" kind="file"><name>sequenced_task_runner.h</name>
  </compound>
  <compound refid="sequenced__task__runner__helpers_8h" kind="file"><name>sequenced_task_runner_helpers.h</name>
  </compound>
  <compound refid="sequenced__task__runner__internals_8h" kind="file"><name>sequenced_task_runner_internals.h</name>
  </compound>
  <compound refid="single__thread__task__runner_8h" kind="file"><name>single_thread_task_runner.h</name>
  </compound>
  <compound refid="source__location_8h" kind="file"><name>source_location.h</name>
    <member refid="source__location_8h_1aa4b9d8432798552dc1aa25ab49a6c595" kind="define"><name>FROM_HERE</name></member>
  </compound>
  <compound refid="auto__signaller_8h" kind="file"><name>auto_signaller.h</name>
  </compound>
  <compound refid="waitable__event_8h" kind="file"><name>waitable_event.h</name>
  </compound>
  <compound refid="task__runner_8h" kind="file"><name>task_runner.h</name>
  </compound>
  <compound refid="task__runner__internals_8h" kind="file"><name>task_runner_internals.h</name>
  </compound>
  <compound refid="delayed__task__manager_8h" kind="file"><name>delayed_task_manager.h</name>
  </compound>
  <compound refid="delayed__task__manager__shared__instance_8h" kind="file"><name>delayed_task_manager_shared_instance.h</name>
  </compound>
  <compound refid="sequenced__task__runner__handle_8h" kind="file"><name>sequenced_task_runner_handle.h</name>
  </compound>
  <compound refid="task__runner__impl_8h" kind="file"><name>task_runner_impl.h</name>
  </compound>
  <compound refid="thread_8h" kind="file"><name>thread.h</name>
  </compound>
  <compound refid="thread__pool_8h" kind="file"><name>thread_pool.h</name>
  </compound>
  <compound refid="time_8h" kind="file"><name>time.h</name>
  </compound>
  <compound refid="time__delta_8h" kind="file"><name>time_delta.h</name>
  </compound>
  <compound refid="time__ticks_8h" kind="file"><name>time_ticks.h</name>
  </compound>
  <compound refid="elapsed__timer_8h" kind="file"><name>elapsed_timer.h</name>
  </compound>
  <compound refid="trace__argument__packer_8h" kind="file"><name>trace_argument_packer.h</name>
  </compound>
  <compound refid="trace__async_8h" kind="file"><name>trace_async.h</name>
    <member refid="trace__async_8h_1ad6580e98c5d7661b2646a6d0e02ae00f" kind="define"><name>TRACE_EVENT_ASYNC_BEGIN</name></member>
    <member refid="trace__async_8h_1a4d0dec35deab6a1ab8a283843c68ac01" kind="define"><name>TRACE_EVENT_ASYNC_STEP</name></member>
    <member refid="trace__async_8h_1a11beb9695695f4b2795d91f3a70088d1" kind="define"><name>TRACE_EVENT_ASYNC_END</name></member>
  </compound>
  <compound refid="trace__complete_8h" kind="file"><name>trace_complete.h</name>
    <member refid="trace__complete_8h_1a06e651758207172afcc30d9b115d01c1" kind="define"><name>TRACE_EVENT_COMPLETE</name></member>
  </compound>
  <compound refid="trace__counter_8h" kind="file"><name>trace_counter.h</name>
    <member refid="trace__counter_8h_1a7dec43654f584ea55475e2f11568ac0d" kind="define"><name>TRACE_COUNTER</name></member>
    <member refid="trace__counter_8h_1adf69ea16b20e716072c3f20399695650" kind="define"><name>TRACE_COUNTER_ID</name></member>
  </compound>
  <compound refid="trace__event_8h" kind="file"><name>trace_event.h</name>
    <member refid="trace__event_8h_1a3872ccab53bf7aff62114d42f536229a" kind="define"><name>TRACE_EVENT</name></member>
    <member refid="trace__event_8h_1afd4ff45b7d6191282a8968d47c1fa9e9" kind="define"><name>TRACE_EVENT_BEGIN</name></member>
    <member refid="trace__event_8h_1a549b0a65535fe53339f3f41d723cad8c" kind="define"><name>TRACE_EVENT_END</name></member>
  </compound>
  <compound refid="trace__event__register_8h" kind="file"><name>trace_event_register.h</name>
  </compound>
  <compound refid="trace__events_8h" kind="file"><name>trace_events.h</name>
  </compound>
  <compound refid="trace__flow_8h" kind="file"><name>trace_flow.h</name>
    <member refid="trace__flow_8h_1aa31dc9f58f891bce7566fbe0cafa513c" kind="define"><name>TRACE_EVENT_WITH_FLOW_BEGIN</name></member>
    <member refid="trace__flow_8h_1a3d28d92c861273fc85dfca8c13d0f368" kind="define"><name>TRACE_EVENT_WITH_FLOW_STEP</name></member>
    <member refid="trace__flow_8h_1a884da60ad50c64c0f1f2fff45fd8bd4e" kind="define"><name>TRACE_EVENT_WITH_FLOW_END</name></member>
  </compound>
  <compound refid="trace__flush_8h" kind="file"><name>trace_flush.h</name>
    <member refid="trace__flush_8h_1a52f3d33d381f698beed87d80b0b259b3" kind="define"><name>TRACE_EVENT_FLUSH_TO_FILE</name></member>
    <member refid="trace__flush_8h_1aabfa93781b3ccffd8d794a7c77d7f740" kind="define"><name>TRACE_EVENT_FLUSH_TO_STREAM</name></member>
  </compound>
  <compound refid="trace__json__writer_8h" kind="file"><name>trace_json_writer.h</name>
  </compound>
  <compound refid="trace__metadata_8h" kind="file"><name>trace_metadata.h</name>
    <member refid="trace__metadata_8h_1af42d9eb778e7e8250fea2e5976b20947" kind="define"><name>TRACE_NAME_PROCESS</name></member>
    <member refid="trace__metadata_8h_1ad82f3ad577aecc88dc8f8aa7e70f0269" kind="define"><name>TRACE_NAME_THREAD</name></member>
  </compound>
  <compound refid="trace__platform_8h" kind="file"><name>trace_platform.h</name>
  </compound>
  <compound refid="trace__signal_8h" kind="file"><name>trace_signal.h</name>
    <member refid="trace__signal_8h_1a7455b881f5f684142a1a9c3999a0243e" kind="define"><name>TRACE_SIGNAL</name></member>
    <member refid="trace__signal_8h_1ac62ea382085eb5e904b23c437f542163" kind="define"><name>TRACE_SIGNAL_THREAD</name></member>
    <member refid="trace__signal_8h_1a52e34069027795f458a6463139a8aeac" kind="define"><name>TRACE_SIGNAL_PROCESS</name></member>
  </compound>
  <compound refid="type__traits_8h" kind="file"><name>type_traits.h</name>
  </compound>
  <compound refid="vlog__is__on_8h" kind="file"><name>vlog_is_on.h</name>
  </compound>
  <compound refid="dir_e914ee4d4a44400f1fdb170cb4ead18a" kind="dir"><name>base</name>
  </compound>
  <compound refid="dir_a461ef2d1b72c2c6a3bd2af555330c36" kind="dir"><name>base/net/impl</name>
  </compound>
  <compound refid="dir_b61bbd7d460f26f4c3b7642f28c67f30" kind="dir"><name>base/memory</name>
  </compound>
  <compound refid="dir_802c9899d0a5219b30e5fe97f9d02030" kind="dir"><name>base/message_loop</name>
  </compound>
  <compound refid="dir_db2833c2b6ba26abc2794e33092fe04c" kind="dir"><name>base/net</name>
  </compound>
  <compound refid="dir_116435984ac3859fa6b37bcb386cd701" kind="dir"><name>base/platform</name>
  </compound>
  <compound refid="dir_9449fdd6eae23017b58bec2fd411a57b" kind="dir"><name>base/synchronization</name>
  </compound>
  <compound refid="dir_634669b979a0cc3c2c60dd130930a30f" kind="dir"><name>base/threading</name>
  </compound>
  <compound refid="dir_6990e531c71adeaa0148d4627b01589a" kind="dir"><name>base/time</name>
  </compound>
  <compound refid="dir_2591cf406277c6183859abd36813c2a4" kind="dir"><name>base/timer</name>
  </compound>
  <compound refid="dir_63ba7ecf8883a410c1ada621900f383c" kind="dir"><name>base/trace_event</name>
  </compound>
  <compound refid="dir_98b339fa767ed69cba0b360ce4811f6e" kind="dir"><name>base/message_loop/win</name>
  </compound>
  <compound refid="dir_dc850963f4cf4c4027e456fe2846176b" kind="dir"><name>base/message_loop/wx</name>
  </compound>
</doxygenindex>
