name: MacOS

on:
  push:
    branches:
      - develop
      - master
      - release/*
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.compiler.name }} ${{ matrix.build_type }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-14, macos-latest]
        build_type: [Release, Debug]
        compiler: [
          {name: Clang, cc: clang, cxx: clang++, package: true}
        ]

    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg
          vcpkgGitCommitId: '782ccc18d8b819cdef6794a6c03eb3d9f7cd04aa'

      - name: CMake configuration
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      - name: Building
        run: cmake --build build --config ${{ matrix.build_type }} -j 8
      - name: Testing
        run: ctest --test-dir build --output-on-failure --timeout 15


      # Prepare & upload binaries
      - name: Prepare binaries
        if: matrix.compiler.package && github.event_name != 'pull_request'
        run: cmake --install build --prefix install --config ${{ matrix.build_type }}
        continue-on-error: true
      - name: Upload binaries as artifact
        if: matrix.compiler.package && github.event_name != 'pull_request' && success()
        uses: actions/upload-artifact@v4
        with:
          name: libbase-${{ github.ref_name }}-${{ matrix.compiler.cc }}-${{ matrix.build_type }}-${{ matrix.os }}-x64.zip
          path: install
          retention-days: 7
        continue-on-error: true
